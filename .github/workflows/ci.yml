name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  PRIMARY_NODE_VERSION: 14
  PRIMARY_PYTHON_VERSION: 3.9
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  NX_CLOUD_ENV_NAME: 'linux'

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - run: yarn install --frozen-lockfile
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PRIMARY_PYTHON_VERSION }}
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      - name: Setup pipenv cache
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install Python dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          yarn nx prepare api
      - run: yarn nx affected --target=lint --parallel --max-parallel=3
      # - run: yarn nx affected --target=build --parallel --max-parallel=3 --verbose
      # - run: yarn nx affected --target=test --parallel --max-parallel=2 --verbose
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - run: yarn install --frozen-lockfile
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PRIMARY_PYTHON_VERSION }}
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      - name: Setup pipenv cache
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install Python dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          yarn nx prepare api
      - run: yarn nx affected --target=lint --parallel --max-parallel=3 --verbose
      # - run: yarn nx affected --target=build --parallel --max-parallel=3 --verbose
      # - run: yarn nx affected --target=test --parallel --max-parallel=2 --verbose