version: '3.8'

services:
  challenge-mongodb:
    image: sagebionetworks/challenge-mongodb:latest
    container_name: challenge-mongodb
    restart: always
    env_file:
      - ./apps/challenge-mongodb/.env
    networks:
      - challenge-registry
    ports:
      - "27017:27017"
    volumes:
      - challenge-mongodb:/data/db

  challenge-registry-api:
    image: sagebionetworks/challenge-registry-api:latest
    container_name: challenge-registry-api
    restart: always
    env_file:
      - ./apps/api/.env
    environment:
      - DB_DOMAIN=challenge-mongodb
    networks:
      - challenge-registry
    ports:
      - "8080:8080"
    depends_on:
      - challenge-mongodb

  challenge-registry-web-app:
    image: sagebionetworks/challenge-registry-web-app:latest
    container_name: challenge-registry-web-app
    restart: always
    env_file:
      - ./apps/web-app/.env
    environment:
      - SERVICE_HOST=challenge-registry-api
      - SERVICE_PORT=8080
    networks:
      - challenge-registry
    ports:
      - "80:80"
    depends_on:
      - challenge-registry-api
      - challenge-registry-movie-api
      - challenge-keycloak

  challenge-registry-movie-api:
    image: sagebionetworks/challenge-registry-movie-api:latest
    container_name: challenge-registry-movie-api
    restart: always
    env_file:
      - ./apps/movie-api/.env
    networks:
      - challenge-registry
    ports:
      - "9000:9000"

  challenge-keycloak:
    image: sagebionetworks/challenge-keycloak:latest
    container_name: challenge-keycloak
    restart: always
    env_file:
      - ./apps/challenge-keycloak/.env
    volumes:
      - ./apps/challenge-keycloak/data/h2:/opt/keycloak/data/h2
    networks:
      - challenge-registry
    ports:
      - "8081:8080"
    command: start-dev
    depends_on:
      - challenge-postgresql
      - challenge-registry-movie-api  # cheating temporarily to make it easier to start the stack.

  challenge-postgresql:
    image: sagebionetworks/challenge-postgresql:latest
    container_name: challenge-postgresql
    restart: always
    env_file:
      - ./apps/challenge-postgresql/.env
    volumes:
      - challenge-postgresql:/var/lib/postgresql/data
      - ./apps/challenge-postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - challenge-registry
    ports:
      - "5432:5432"

networks:
  challenge-registry:

volumes:
  challenge-mongodb:
    name: challenge-mongodb
  challenge-postgresql:
    name: challenge-postgresql